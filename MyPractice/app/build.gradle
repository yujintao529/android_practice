apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: rootProject.file("gradle/deps.gradle.kts")
android {

    buildToolsVersion Versions.buildToolsVersion

    defaultConfig {
        applicationId "com.example.mypractice"
        minSdkVersion Versions.minSdkVersion
        compileSdkVersion Versions.compileSdkVersion
        targetSdkVersion Versions.targetSdkVersion
        multiDexEnabled true
        multiDexKeepProguard rootProject.file('maindexlist.txt') // keep specific classes
        ndk {
            abiFilters "x86",'armeabi-v7a' //必须要指定一个否则一个没有
        }
        resConfigs 'cn','xhdpi'
    }
    signingConfigs {
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(rootProject.file("release-jks.properties")))
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }


    sourceSets {
        main {
            resources.srcDirs 'src/main/res'
            java.srcDirs 'src/main/java', 'src/main/kotlin'
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDir 'libs'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles 'proguard-project.txt'
            signingConfig signingConfigs.release
        }
        debug {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'lib/arm64-v8a/*'
        exclude 'lib/armeabi/*'
        exclude 'lib/x86_64/*'
        exclude 'lib/mips/*'
//        exclude 'lib/x86/*'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

}

android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true

dependencies {
    implementation fileTree(includes: ['*.jar'], dir: 'libs')
    implementation Deps.supportv4
    implementation Deps.recyclerview
    implementation Deps.cardview
    implementation Deps.design
    implementation Deps.lifecycleExtensions
    implementation Deps.rxJavaDependency
    implementation Deps.rxAndroidDependency
    implementation Deps.autoService
    implementation Deps.debugdb
    implementation Deps.glide
    debugImplementation Deps.leakcanary
    releaseImplementation Deps.leakcanary_noop
    implementation Deps.kotlinstdjdk7
    implementation Deps.kotlinreflect
    implementation Deps.wecahtOpenSdk
    implementation project(":libgaussia")
    implementation project(":libavd")
    implementation Deps.butterKnife
    kapt Deps.butterKnifeCompiler
    kapt Deps.permissionDispatcherProcessor
    implementation Deps.permissionDispatcher
}



